{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport LazyLoad from 'vanilla-lazyload';\nimport lazyloadConfig from './config/lazyload'; // Only initialize it one time for the entire application\n\nif (false) {\n  if (!document.lazyLoadInstance) {\n    document.lazyLoadInstance = new LazyLoad(lazyloadConfig);\n  }\n}\n\nconst LazyImage = ({\n  alt,\n  src,\n  srcset,\n  sizes,\n  width,\n  height,\n  className\n}) => {\n  useEffect(() => {\n    if (false) {\n      document.lazyLoadInstance.update();\n    }\n  });\n  return /*#__PURE__*/_jsx(\"img\", {\n    alt: alt,\n    className: `lazy ${className}`,\n    \"data-src\": src,\n    \"data-srcset\": srcset,\n    \"data-sizes\": sizes,\n    width: width,\n    height: height\n  });\n};\n\nexport default LazyImage;","map":{"version":3,"sources":["/Users/jiasheng/Documents/GitHub/jiasheng98.github.io/src/components/lazy-image.js"],"names":["useEffect","LazyLoad","lazyloadConfig","document","lazyLoadInstance","LazyImage","alt","src","srcset","sizes","width","height","className","update"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B,C,CAEA;;AACA,WAAmC;AACjC,MAAI,CAACC,QAAQ,CAACC,gBAAd,EAAgC;AAC9BD,IAAAA,QAAQ,CAACC,gBAAT,GAA4B,IAAIH,QAAJ,CAAaC,cAAb,CAA5B;AACD;AACF;;AAED,MAAMG,SAAS,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,GAAN;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA,MAAjC;AAAyCC,EAAAA;AAAzC,CAAD,KAAyD;AACzEZ,EAAAA,SAAS,CAAC,MAAM;AACd,eAAmC;AACjCG,MAAAA,QAAQ,CAACC,gBAAT,CAA0BS,MAA1B;AACD;AACF,GAJQ,CAAT;AAMA,sBACE;AACE,IAAA,GAAG,EAAEP,GADP;AAEE,IAAA,SAAS,EAAG,QAAOM,SAAU,EAF/B;AAGE,gBAAUL,GAHZ;AAIE,mBAAaC,MAJf;AAKE,kBAAYC,KALd;AAME,IAAA,KAAK,EAAEC,KANT;AAOE,IAAA,MAAM,EAAEC;AAPV,IADF;AAWD,CAlBD;;AAoBA,eAAeN,SAAf","sourcesContent":["import {useEffect} from 'react';\nimport LazyLoad from 'vanilla-lazyload';\nimport lazyloadConfig from './config/lazyload';\n\n// Only initialize it one time for the entire application\nif (typeof window !== 'undefined') {\n  if (!document.lazyLoadInstance) {\n    document.lazyLoadInstance = new LazyLoad(lazyloadConfig);\n  }\n}\n\nconst LazyImage = ({alt, src, srcset, sizes, width, height, className}) => {\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      document.lazyLoadInstance.update();\n    }\n  });\n\n  return (\n    <img\n      alt={alt}\n      className={`lazy ${className}`}\n      data-src={src}\n      data-srcset={srcset}\n      data-sizes={sizes}\n      width={width}\n      height={height}\n    />\n  );\n};\n\nexport default LazyImage;\n"]},"metadata":{},"sourceType":"module"}