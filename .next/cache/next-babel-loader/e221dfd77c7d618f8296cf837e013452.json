{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n// function Error({ statusCode }) {\n//   return (\n//     <p>\n//       {statusCode\n//         ? `An error ${statusCode} occurred on server`\n//         : 'An error occurred on client'}\n//     </p>\n//   )\n// }\n// Error.getInitialProps = ({ res, err }) => {\n//   const statusCode = res ? res.statusCode : err ? err.statusCode : 404\n//   return { statusCode }\n// }\n// export default Error\nimport Error from 'next/error';\nimport fetch from 'isomorphic-unfetch';\n\nconst Page = ({\n  errorCode,\n  stars\n}) => {\n  console.log('Page -> errorCode', errorCode);\n\n  if (errorCode) {\n    return /*#__PURE__*/_jsx(Error, {\n      statusCode: errorCode\n    });\n  }\n\n  if (errorCode == 404) return /*#__PURE__*/_jsx(\"div\", {\n    children: \"404 Error page\"\n  });\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: errorCode\n  });\n};\n\nPage.getInitialProps = async () => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js');\n  const errorCode = res.statusCode > 200 ? res.statusCode : false;\n  const json = await res.json();\n  return {\n    errorCode,\n    stars: json.stargazers_count\n  };\n};\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}